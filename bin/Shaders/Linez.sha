#shader vertex
#version 130

in vec3 vertexPos;
in vec3 vertexColor;
in vec2 vertexCoord;

out vec3 fragmentPos;
out vec3 fragmentColor;
out vec2 fragmentCoord;

uniform mat4 proj;
uniform mat4 view;

void main()
{
    mat4 model = mat4(1);
    model[3] = vec4(0,10,0,1);

    mat4 mv = mat4(1);
    mv[3] = (view * model)[3];

    vec4 vmv = mv * vec4(vertexPos, 1);

    gl_Position = proj * vmv;

    fragmentPos = vmv.xyz;
    fragmentColor = vertexColor;
    fragmentCoord = vertexCoord;
}

#shader fragment
#version 130

in vec3 fragmentPos;
in vec3 fragmentColor;
in vec2 fragmentCoord;

out vec4 outColor;

uniform sampler2D uDepth;
uniform sampler2D uImage;

uniform mat4 proj;
uniform mat4 view;

bool isVisible()
{
    vec4 offset = vec4(fragmentPos, 1.0);
    offset = proj * offset;
    offset.xyz /= offset.w;
    offset.xy = offset.xy * 0.5 + vec2(0.5);

    float otherDepth = texture(uDepth, offset.xy).r;
    float poseDepth = gl_FragCoord.z;

    return otherDepth >= poseDepth;
}

void main()
{
    vec3 texColor = texture(uImage, fragmentCoord).rgb;

    if (!isVisible())
        discard;

    outColor = vec4(texColor, 1);
}

//SINGIELTON
//KONTAKTANACJE
//by Remi
